import{s as h}from"./service-CvN87575.js";import{_ as l,G as f,r as m,o as s,c as _,w as p,a as g,b as o,t as a,e as c}from"./index-DwBrLgem.js";const k={name:"Portainer",components:{Generic:f},mixins:[h],props:{item:Object},data:()=>({endpoints:null,containers:null}),computed:{running:function(){return this.containers?this.containers.filter(t=>t.State.toLowerCase()==="running").length:""},dead:function(){return this.containers?this.containers.filter(t=>t.State.toLowerCase()==="dead").length:""},misc:function(){return this.containers?this.containers.filter(t=>t.State.toLowerCase()!=="running"&&t.State.toLowerCase()!=="dead").length:""}},created(){this.fetchStatus()},methods:{fetchStatus:async function(){const t={"X-Api-Key":this.item.apikey};this.endpoints=await this.fetch("/api/endpoints",{headers:t}).catch(n=>{console.error(n)});let i=[];for(let n of this.endpoints){if(this.item.environments&&!this.item.environments.includes(n.Name))continue;const d=`/api/endpoints/${n.Id}/docker/containers/json?all=1`,r=await this.fetch(d,{headers:t}).catch(e=>{console.error(e)});r&&(i=i.concat(r))}this.containers=i}}},w={class:"notifs"},C={key:0,class:"notif running",title:"Running"},y={key:1,class:"notif dead",title:"Dead"},S={key:2,class:"notif misc",title:"Other (creating, paused, exited, etc.)"};function v(t,i,n,d,r,e){const u=m("Generic");return s(),_(u,{item:n.item},{indicator:p(()=>[g("div",w,[e.running>0?(s(),o("strong",C,a(e.running),1)):c("",!0),e.dead>0?(s(),o("strong",y,a(e.dead),1)):c("",!0),e.misc>0?(s(),o("strong",S,a(e.misc),1)):c("",!0)])]),_:1},8,["item"])}const G=l(k,[["render",v],["__scopeId","data-v-c3d3c9e4"]]);export{G as default};
